# vim: ft=sh
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
    else
    color_prompt=
    fi
fi

function parse_git_branch_and_add_cbrackets {
    /usr/bin/git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/┤\1├/'
}

function return_android_serial {
if [ -n "$ANDROID_SERIAL" ]; then
  echo "┤$ANDROID_SERIAL├"
else
  echo ""
fi
}

function tmux_decoration {
if [ -n "$TMUX" ]; then
  #echo '\[\033[00;32m4m\][\[\033[00m\]'$@'\[\033[00;32m\033[44m\]]\[\033[00m\]'
  echo '\[\033[00;32m\]|\[\033[00m\]'$@'\[\033[00;32m\]|\[\033[00m\]'
else
  echo $@
fi
}

function shorten_path {
  # reduce the full path to a shorter form
  # e.g. /home/ducouloa/long/path/to/directory/ → ~/l/p/t/directory
  redu=`echo $PWD |sed -r "s|$HOME|~|"`
  echo $redu | sed -r 's;([^/]{0,2})[^/]*/;\1/;g'
  unset redu
}

function fill_prompt {
  ZEXIT="${?}"
  [ "$ZEXIT" = "0" ] && ZEXIT=""

  ZGIT="$(parse_git_branch_and_add_cbrackets)"
  ZPATH="$(eval "shorten_path")"
  ZANDROID_SERIAL=$(return_android_serial)

  local fillsize
  local gflength=15
  let fillsize=${COLUMNS}-${#ZEXIT}-${#ZGIT}-${#ZPATH}-${#ZANDROID_SERIAL}-${gflength}
  ZFILL=""
  while [ "$fillsize" -gt "0" ]; do
    ZFILL="$ZFILL─"
    let fillsize=${fillsize}-1
  done
  # echo "\n┌──\[\033[35m\]$ZGIT\[\033[00m\]─┤\[\033[34m\]$ZPATH\[\033[00m\]├─$ZFILL─┤\t├─"
  # echo $ZGIT$ZPATH$ZANDROID_SERIAL$ZFILL
}

PROMPT_COMMAND="fill_prompt ; echo -ne \"\a\""
#ZPS1+='\[\033[01;30m\][\t]\[\033[00m\]'
# PS1='\n┌──\[\033[35m\]$(parse_git_branch_and_add_cbrackets)\[\033[00m\]'
#PS1+='\[\033[01;30m\]\u@\[\033[00m\]'
#PS1+='\[\033[32m\]\h\[\033[00m\]:'
# PS1+='─┤\[\033[34m\]$(eval "shorten_path")\[\033[00m\]├─'
# PS1+='\[\033[33m\]$(return_android_serial)\[\033[00m\]'
# PS1+='─┤\t├─'
PS1='\n┌─\[\033[1;31m\]$ZEXIT\[\033[00m\]─\[\033[35m\]$ZGIT\[\033[00m\]'
PS1+='┤\[\033[34m\]$ZPATH\[\033[00m\]├'
PS1+='\[\033[33m\]$ZANDROID_SERIAL\[\033[00m\]'
PS1+='$ZFILL'
PS1+='┤\t│'
# PS1=$(tmux_decoration $PS1)
PS1+='\n│ '
PS2='│ '

unset color_prompt force_color_prompt

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias o='xdg-open'
alias sl='ls'
alias ll='ls -alF'
alias la='ls -A'
alias lh='ls -AlFh'
alias l='ls -CF'
alias tmux='tmux -2'
alias tas='tmux attach-session -t '
alias tls='tmux list-session '
alias tks='tmux kill-session -t '
alias tss='tmux switch -t '
alias :q='exit'
alias pm="adb shell pm"
alias am="adb shell am"
alias viproj="vim +Project"
alias wiki="vim +VimwikiIndex"
alias todo="vim ~/wiki/todo.wiki"
# workaround the startify plugin with a throwaways variable 'a'
alias diary="vim -c Diary +"
alias setandroidenv=". setandroidenv"

# bd utility (back into directory) see submodule scripts/bd
alias bd='. ~/dotfiles/scripts/bd/bd -si'
# + add the autocompletion
source ~/dotfiles/scripts/bd/bash_completion.d/bd

# complete command launched through dbc
complete -F _command dbc

# display directory content with full path to open with vim-scrollable
function lp()
{
  ls -d -1 $PWD/$1/*
}

function w3ms()
{
# execute w3m and launch a google searh on the arguments strings
  w3m http://www.google.com/search?q="`echo $@`"
}

function vim()
{
  vi `echo $* | sed 's/:/ +/g'`
}

function resize_urxvt()
{
  printf "\e[8;%s;%st" $1 $2
}

function set_title_urxvt()
{
  printf "\033]0;%s\007" $1
}

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

set -o vi
# Disable Ctrl-S XOFF
stty -ixon
bind -m vi-insert "\C-l":clear-screen

export EDITOR=vi
export BC_ENV_ARGS="-l"
# export PROMPT_COMMAND='echo -ne "\a"';fill_prompt

# autojump stuff
[[ -s /home/alain/dotfiles/scripts/etc/profile.d/autojump.sh ]] && source /home/alain/dotfiles/scripts/etc/profile.d/autojump.sh

if [ -f ~/.bashrc_local ]; then
  source ~/.bashrc_local
fi

PATH="/home/alain/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/home/alain/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/alain/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/alain/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/alain/perl5"; export PERL_MM_OPT;
